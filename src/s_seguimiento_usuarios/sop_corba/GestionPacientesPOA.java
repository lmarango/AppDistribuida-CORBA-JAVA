package s_seguimiento_usuarios.sop_corba;


/**
* s_seguimiento_usuarios/sop_corba/GestionPacientesPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from gpacientes.idl
* sábado 5 de marzo de 2022 10H24' COT
*/

public abstract class GestionPacientesPOA extends org.omg.PortableServer.Servant
 implements s_seguimiento_usuarios.sop_corba.GestionPacientesOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("registrarValoracion", new java.lang.Integer (0));
    _methods.put ("consultarValoracion", new java.lang.Integer (1));
    _methods.put ("registrarProgramaFisico", new java.lang.Integer (2));
    _methods.put ("consultarProgramaFisico", new java.lang.Integer (3));
    _methods.put ("registrarAsistencia", new java.lang.Integer (4));
    _methods.put ("consultarAsistencia", new java.lang.Integer (5));
    _methods.put ("contarFaltas", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // sop_corba/GestionPacientes/registrarValoracion
       {
         s_seguimiento_usuarios.sop_corba.ValoracionDTO objValoracion = s_seguimiento_usuarios.sop_corba.ValoracionDTOHelper.read (in);
         org.omg.CORBA.BooleanHolder res = new org.omg.CORBA.BooleanHolder ();
         this.registrarValoracion (objValoracion, res);
         out = $rh.createReply();
         out.write_boolean (res.value);
         break;
       }

       case 1:  // sop_corba/GestionPacientes/consultarValoracion
       {
         int id = in.read_long ();
         s_seguimiento_usuarios.sop_corba.ValoracionDTOHolder objValoracion = new s_seguimiento_usuarios.sop_corba.ValoracionDTOHolder ();
         boolean $result = false;
         $result = this.consultarValoracion (id, objValoracion);
         out = $rh.createReply();
         out.write_boolean ($result);
         s_seguimiento_usuarios.sop_corba.ValoracionDTOHelper.write (out, objValoracion.value);
         break;
       }

       case 2:  // sop_corba/GestionPacientes/registrarProgramaFisico
       {
         s_seguimiento_usuarios.sop_corba.ProgramaFisicoDTO objProgramaFisico = s_seguimiento_usuarios.sop_corba.ProgramaFisicoDTOHelper.read (in);
         org.omg.CORBA.BooleanHolder res = new org.omg.CORBA.BooleanHolder ();
         this.registrarProgramaFisico (objProgramaFisico, res);
         out = $rh.createReply();
         out.write_boolean (res.value);
         break;
       }

       case 3:  // sop_corba/GestionPacientes/consultarProgramaFisico
       {
         int id = in.read_long ();
         s_seguimiento_usuarios.sop_corba.ProgramaFisicoDTOHolder objProgramaFisico = new s_seguimiento_usuarios.sop_corba.ProgramaFisicoDTOHolder ();
         boolean $result = false;
         $result = this.consultarProgramaFisico (id, objProgramaFisico);
         out = $rh.createReply();
         out.write_boolean ($result);
         s_seguimiento_usuarios.sop_corba.ProgramaFisicoDTOHelper.write (out, objProgramaFisico.value);
         break;
       }

       case 4:  // sop_corba/GestionPacientes/registrarAsistencia
       {
         s_seguimiento_usuarios.sop_corba.AsistenciaDTO objAsistencia = s_seguimiento_usuarios.sop_corba.AsistenciaDTOHelper.read (in);
         org.omg.CORBA.BooleanHolder res = new org.omg.CORBA.BooleanHolder ();
         this.registrarAsistencia (objAsistencia, res);
         out = $rh.createReply();
         out.write_boolean (res.value);
         break;
       }

       case 5:  // sop_corba/GestionPacientes/consultarAsistencia
       {
         int id = in.read_long ();
         s_seguimiento_usuarios.sop_corba.ArrayAsistenciaHolder lstAsistencia = new s_seguimiento_usuarios.sop_corba.ArrayAsistenciaHolder ();
         boolean $result = false;
         $result = this.consultarAsistencia (id, lstAsistencia);
         out = $rh.createReply();
         out.write_boolean ($result);
         s_seguimiento_usuarios.sop_corba.ArrayAsistenciaHelper.write (out, lstAsistencia.value);
         break;
       }

       case 6:  // sop_corba/GestionPacientes/contarFaltas
       {
         int id = in.read_long ();
         org.omg.CORBA.IntHolder numFaltas = new org.omg.CORBA.IntHolder ();
         this.contarFaltas (id, numFaltas);
         out = $rh.createReply();
         out.write_long (numFaltas.value);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:sop_corba/GestionPacientes:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public GestionPacientes _this() 
  {
    return GestionPacientesHelper.narrow(
    super._this_object());
  }

  public GestionPacientes _this(org.omg.CORBA.ORB orb) 
  {
    return GestionPacientesHelper.narrow(
    super._this_object(orb));
  }


} // class GestionPacientesPOA
